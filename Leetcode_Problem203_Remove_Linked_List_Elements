/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
 struct ListNode* removeElements(struct ListNode* head, int val){
    struct ListNode* current = head;
    while (head && head->val == val)
        head = head->next;
    
    while (current && current->next) 
    {
        if (current->next->val == val)
            current->next = current->next->next;
        else
            current = current->next;
    }
    return head;
}


------------------------------------------------------------------------------------


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */
struct ListNode* removeElements(struct ListNode* head, int val){
    struct ListNode* temp;

    while(head && head->val == val) 
    {
        temp = head;
        head = head->next;
        free(temp);
    }

    struct ListNode *cur = head;

    while(cur && (temp = cur->next)) 
    {
        if(temp->val == val) 
        {
            cur->next = temp->next;
            free(temp);
        }
        else
            cur = cur->next;
    }
    return head;
}
